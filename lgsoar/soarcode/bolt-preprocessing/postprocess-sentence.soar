sp {postprocess-sentence*elaborate*init
   (state <s> ^name postprocess-sentence
              ^superstate.operator.predicates <pred>
              ^top-state.sentence-mapping <map>)
-->
   (<s> ^predicates <pred> # add ^postprocessed true to this
        ^map <map>)
}

sp {postprocess-sentence*propose*finish-postprocessing
   (state <s> ^name postprocess-sentence)
-->
   (<s> ^operator <o> + <)
   (<o> ^name finish-postprocessing
        ^kind interpretation)
}

sp {postprocess-sentence*apply*finish-postprocessing
   (state <s> ^name postprocess-sentence
              ^operator.name finish-postprocessing
              ^top-state <ts>
              ^map <sm>
              ^predicates <pred>)
   (<ts> ^sentence-mapping <sm>)
-->
   (<ts> ^sentence-mapping <sm> -)
   (<pred> ^postprocessed true)
}

sp {postprocess-sentence*propose*remove-filler
   (state <s> ^name postprocess-sentence
              ^map.word <wd>
              ^predicates.predicate <pred>)
   (<wd> ^is-filler true
         ^parser-wvalue <wv>)
   (<pred> ^<< outer outer1 outer2 inner1 inner2 inner3 >> <wv>)
-->
   (<s> ^operator <o> + > =) # allow multiple filler removals with one application
   (<o> ^name remove-filler)
}

sp {postprocess-sentence*apply*remove-filler
   (state <s> ^name postprocess-sentence
              ^operator.name remove-filler
              ^map.word <wd>
              ^predicates <ps>)
   (<ps> ^predicate <pred>)
   (<wd> ^is-filler true
         ^parser-wvalue <wv>)
   (<pred> ^<< outer outer1 outer2 inner1 inner2 inner3 >> <wv>)
-->
   (<ps> ^predicate <pred> -)
}

sp {postprocess-sentence*elaborate*report-unmap
   (state <s> ^name postprocess-sentence
              ^map.word <wd>)
   (<wd> ^real-wvalue <rv>
         ^parser-wvalue {<> <rv> <pv>})
-->
   (write (crlf) |will unmap | <pv> | -> | <rv>)
}

sp {postprocess-sentence*elaborate*should-be
   (state <s> ^name postprocess-sentence
              ^map.word <wd>
              ^predicates.predicate <pred>)
   (<wd> ^real-wvalue <rv>
         ^parser-wvalue {<> <rv> <pv>})
   (<pred> ^{<< outer outer1 outer2 inner1 inner2 inner3 >> <field>} <pv>)
-->
   (<s> ^should-be <sb>)
   (<sb> ^predicate <pred>
         ^field <field>
         ^value <rv>)
}

sp {postprocess-sentence*propose*unmap
   (state <s> ^name postprocess-sentence
              ^should-be <sb>)
-->
   (<s> ^operator <o> +)
   (<o> ^name unmap
        ^kind interpretation)
}

sp {postprocess-sentence*apply*unmap
   (state <s> ^name postprocess-sentence
              ^operator.name unmap
              ^should-be <sb>)
   (<sb> ^predicate <pred>
         ^field <field>
         ^value <value>)
   (<pred> ^<field> <old-value>)
-->
   (<pred> ^<field> <old-value> -
           ^<field> <value>)
}
