### set some flags that we'll need for later testing

################################## copula flag ###################################

sp {global*apply*generate-predicates*output*set-flag*copula
  :o-support
   (state <s> ^model.idea <idea>)
   (state <s> ^operator <o>)
   (<o> ^name generate-predicates)
   (state <s>  
   #^count <count> 
   ^refsets.refs.count <count>)
   (<idea> ^nuc {<< was were am are is be >> <nucval>})
-->
  (<idea> ^annotation copula +)
  (<o> ^annotation copulaflag-set +)
}
sp {global*apply*generate-predicates*output*set-flag*copula*fail
  :o-support
   (state <s> ^model.idea <idea>)
   (state <s> ^operator <o>)
   (<o> ^name generate-predicates)
   (state <s>  
   #^count <count> 
   ^refsets.refs.count <count>)
   (<idea> -^nuc {<< was were am are is be >> <nucval>})
-->
  (<o> ^annotation copulaflag-set +)
}


#################################### preposition flags #########################

### copula+pred-pp have different structure
sp {global*apply*generate-predicates*output*flag-preplex*copula
   (state <s> ^model.idea <idea> ^operator <o>)
   (<o> ^name generate-predicates ^annotation copulaflag-set)
   (<idea> ^preposition-lex <some> ^annotation copula)
-->
  (<idea> ^annotation pred-pp +)
}

### should fire in parallel with the above 
sp {global*apply*generate-predicates*output*flag-preplex*done
   (state <s> ^operator <o>)
   (<o> ^name generate-predicates ^annotation copulaflag-set)
-->
  (<o> ^annotation prepflags-set)
}


#################################### adjective/noun flags #########################

### set an annotation to flag predicate adjectives and nouns

# test to see whether the internal argument is a predicate adjective
# set a flag on the idea (so we can assure the pred-adj/noun test has been done)
# and set a flag on the internal argument if it is a pred-adj/noun
sp {global*apply*generate-predicates*output*set-flag*pred-adj/noun
  :o-support
   (state <s> ^model.idea <idea>)
   (state <s> ^operator <o>)
   (<o> ^name generate-predicates ^annotation prepflags-set)
   (state <s>  
   #^count <count> 
   ^refsets.refs.count <count>)
   (<idea> ^int <thisroleval> ^nuc {<< was were am are is be >> <nucval>})
   (<thisroleval> ^nuc <thisnucval> 
   -^annotation pred-pp
   -^annotation in-n-n)
-->
  (<idea> ^annotation pred-adj/noun-tested + ^annotation copula +)
  (<thisroleval> ^annotation pred-adj/noun +)
  (<o> ^annotation predflags-set +)
}
sp {global*apply*generate-predicates*output*set-flag*pred-adj/noun*fail
  :o-support
   (state <s> ^model.idea <idea>)
   (state <s> ^operator <o>)
   (<o> ^name generate-predicates ^annotation prepflags-set) 
   (state <s> 
   #^count <count> 
   ^refsets.refs.count <count>)
   (<idea> ^int <thisroleval> ^nuc {<> was <> were <> am <> are <> is <> be <nucval>})
   (<thisroleval> ^nuc <thisnucval> 
   -^annotation in-n-n)
-->
  (<idea> ^annotation pred-adj/noun-tested +)
  (<o> ^annotation predflags-set +)
}
# put out a white lie for itrx verbs
sp {global*apply*generate-predicates*output*set-flag*pred-adj/noun*fail*intrx
  :o-support
   (state <s> ^model.idea <idea>)
   (state <s> ^operator <o>)
   (<o> ^name generate-predicates ^annotation prepflags-set) 
   (state <s>
   #^count <count> 
   ^refsets.refs.count <count>)
   (<idea> ^ext <anyext> -^int <thisroleval> ^nuc <nucval>)
-->
  (<idea> ^annotation pred-adj/noun-tested +)
  (<o> ^annotation predflags-set +)
}
