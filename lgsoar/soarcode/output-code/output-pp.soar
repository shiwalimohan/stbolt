

### output predicate for predicate PP
# the block is on the table .
sp {global*apply*generate-predicates*output*predicate-PP
   (state <s> ^superstate nil ^model.idea <idea>
              ^final-predicates <fp> ^final-predicate-strings <fps>)
   (state <s> ^operator.name generate-predicates 
   #^count <count> 
   ^refsets.refs.count <count>)
   (<idea> ^ext <extval> ^annotation copula ^annotation pred-pp ^preplex <plex> ^<plex> <plexval>)
   (<extval> ^nuc <extnucval> ^annotation pred-dumped)
   (<plexval> ^nuc <pobjlex>) 
-->
   (<plexval> ^annotation pred-dumped +)
   (<idea> ^annotation pred-dumped +) # a white lie
  (<fps> ^predicate (concat <plex> |(| <extval> |,| <plexval> |)|))
   (<fp> ^predicate <pred>)
   (<pred> ^outer <plex>
           ^inner1 <extval>
           ^inner2 <plexval>)
#   (write (crlf) predicate-pp: | | <plex> |(| <extval> |,| <plexval> |)|)
}


### output predicate for PP on external arg
# the man with teeth barfed .
# the big man with teeth barfed .
### copula predicate has PP
# one criterion is history of lymphoma
sp {global*apply*generate-predicates*output*nuc+ppobj*predicate
    (state <s> ^superstate nil ^operator <o> ^final-predicates <fp> ^final-predicate-strings <fps> 
    #^count <count> 
    ^model <m*1>
          ^refsets <refsets>)
    (<o> ^name generate-predicates)
    (<m*1> ^idea <idea>)
    (<idea> -^relclause <relval> 
    #-^aug <augval> DWL: it's an ext so the predicate is an ^aug
    -^int <intval> -^ext <extval>
          ^nuc <nucval>
	  ^preplex <plex> ^<plex> <pobjval> -^annotation pred-pp)
    (<refsets> ^refs <refs>)
    (<refs> ^count <count>)
    (<pobjval> ^nuc <nuc2val> ^aug <aug2val>)

    # SBW added
  -{(<idea> ^aug <idea2>)
    (<idea2> ^annotation copula
             ^int <idea>)}
    -->
    (<pobjval> ^annotation pred-dumped +)
    (<fps> ^predicate (concat <plex> |(| <idea> |,| <pobjval> |)|))
   (<fp> ^predicate <pred>)
   (<pred> ^outer <plex>
           ^inner1 <idea>
           ^inner2 <pobjval>)
#    (write (crlf) nuc-ppobj*seq: <plex> |(| <idea> |,| <pobjval> |)|)
}

# SBW added this
sp {global*apply*generate-predicates*output*nuc+ppobj*predicate*through-copula
    (state <s> ^superstate nil ^operator <o> ^final-predicates <fp> ^final-predicate-strings <fps> 
    #^count <count> 
    ^model <m*1>
          ^refsets <refsets>)
    (<o> ^name generate-predicates)
    (<m*1> ^idea <idea>)
    (<idea> -^relclause <relval> 
    #-^aug <augval> DWL: it's an ext so the predicate is an ^aug
    -^int <intval> -^ext <extval>
          ^nuc <nucval>
	  ^preplex <plex> ^<plex> <pobjval> -^annotation pred-pp)
    (<refsets> ^refs <refs>)
    (<refs> ^count <count>)
    (<pobjval> ^nuc <nuc2val> ^aug <aug2val>)

    (<idea> ^aug <idea2>)
    (<idea2> ^annotation copula
             ^int <idea>
             ^ext <idea3>)
    -->
    (<pobjval> ^annotation pred-dumped +)
    (<fps> ^predicate (concat <plex> |(| <idea3> |,| <pobjval> |)|))
   (<fp> ^predicate <pred>)
   (<pred> ^outer <plex>
           ^inner1 <idea3>
           ^inner2 <pobjval>)
#    (write (crlf) nuc-ppobj*seq: <plex> |(| <idea3> |,| <pobjval> |)|)
}

### can't output predicate for PP on internal arg because LG parser always attaches PP to verb
### police chased the man with a limp
### in any case, handle PP attachments to verb; for now just use verb lex as first argument
### this should handle intransitives, transitives, and ditransitives
sp {global*apply*generate-predicates*output*PP*v-attached
    (state <s> ^superstate nil ^operator <o> ^final-predicates <fp> ^final-predicate-strings <fps>
    #^count <count> 
    ^model <m*1>
          ^refsets <refsets>)
    (<o> ^name generate-predicates)
    (<m*1> ^idea <idea>)
    (<idea> ^nuc <nucval> ^preplex <plex> ^<plex> <pobjval> -^annotation copula -^annotation pred-pp)
	# somewhat of a hack---without this we get with(x1,x2) and with(verb,X2) for some reason
    (<idea> -^aug.annotation copula)
    (<refsets> ^refs <refs>)
    (<refs> ^count <count>)
    (<pobjval> ^nuc <nuc2val> ^aug <aug2val>)
    -->
    (<pobjval> ^annotation pred-dumped +)
    (<fps> ^predicate (concat <plex> |(| <nucval> |,| <pobjval> |)|))
   (<fp> ^predicate <pred>)
   (<pred> ^outer <plex>
           ^inner1 <nucval>
           ^inner2 <pobjval>)
    #(write (crlf) nuc-ppobj*seq: <plex> |(| <nucval> |,| <pobjval> |)|)
}

### output a predicate for the object of any pp
# the happy dogs with a penchant for ridiculous drama chased the ugly cat .
sp {global*apply*generate-predicates*cligdump*ppobj*arg
   (state <s> ^superstate nil ^model.idea <idea> ^final-predicates <fp> ^final-predicate-strings <fps>)
   (state <s> ^operator.name generate-predicates 
   #^count <count> 
   ^refsets.refs.count <count>)
   (<idea> ^nuc <nucval> ^preplex <plex> ^<plex> <pobjval>)
   (<pobjval> ^nuc <nuc2val> ^aug <aug2val>)
-->
   (<pobjval> ^annotation pred-dumped +)
   #(<nuc2val> ^annotation pred-dumped +)
   (<fps> ^predicate (concat <nuc2val> |(| <pobjval> |)|))
   (<fp> ^predicate <pred>)
   (<pred> ^outer <nuc2val>
           ^inner1 <pobjval>)
#   (write (crlf) ext/int-arg: <nuc2val> |(| <pobjval> |)|)
}



