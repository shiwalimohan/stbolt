# File: cleanup.soar
# Author: William Taysom
# Created: Mar. 3, 2001
#
# Desc: Implements transfer operators. (clean-up)
#
# Transfer Rules Implemented:
# 			transfer-intrans-verb, transfer-trans-verb, transfer-dref,
#			transfer-date, transfer-location-verb-connecting, transfer-pos-s,
#			transfer-number-superlative, transfer-verb-modifying-prep
#			transfer-supressed-verb-nominal-relation, transfer-proper-noun,
#			transfer-be-complement, transfer-date-identified-as-proper-noun,
#			transfer-modal, transfer-negation
#
# TO DO:
# 

## Transfer rules:
# transfer-dref

sp	{Link*propose*transfer-dref
	(state <s> ^analysis <a> ^DRS <d>)
	(<a> ^transfer-dref <u>)
	(<u> ^word.wcount <pos>)
	(<d> -^dref <u>)
-->
	(<s> ^operator <o> + >)
	(<o> ^name transfer-dref ^dref <u> ^ordering <pos> ^complete? no)}

sp	{Link*apply*transfer-dref
	(state <s> ^operator <o> ^protoDRS <pd> ^DRS <d>)
	(<o> ^name transfer-dref ^dref <u> ^complete? no)
	(<pd> ^cond <cond>)
	(<cond> ^kind nominal ^arg <u>)
-->
	(<d> ^dref <u> + ^cond <cond> +)
}

# transfer-intrans-verb

sp	{Link*propose*transfer-intrans-verb
	(state <s> ^protoDRS <pd> ^DRS <d> ^analysis <a> ^goal <goal>)
	(<goal> ^name clean-up)
	(<pd> ^cond <cond>)
	(<cond> ^kind verbal ^subj <u> ^verb <v>)
	(<v> ^wvalue <verb> ^wcount <pos>)
  -{(<a> ^verb <a-verb>)
  	(<a-verb> ^source <cond>)}
-->
	(<s> ^operator <o> + <)
	(<o> ^name transfer-intrans-verb ^subj <u> ^verb <verb> ^cond <cond>
		 ^ordering <pos> ^complete? no)}

sp	{Link*apply*transfer-intrans-verb
	(state <s> ^operator <o> ^DRS <d> ^analysis <a>)
	(<o> ^name transfer-intrans-verb ^subj <u> ^verb <verb> ^cond <cond>)
	(<d> ^dref <u>)
-->
	(<d> ^cond <new-cond> +)
	(<new-cond> ^kind verbal ^verb <verb> ^subj <u>)
	(<a> ^verb <a-verb> +)
	(<a-verb> ^source <cond> ^destination <new-cond>)
}

sp	{Link*fail*apply*transfer-intrans-verb*cause*needs*transfer-subj-dref
	(state <s> ^operator <o> ^analysis <a>)
	(<o> ^name transfer-intrans-verb ^subj <u> ^verb <verb> ^cond <cond>
		 ^complete? no)
	(<a> -^transfer-dref <u>)
-->
	(<a> ^transfer-dref <u> +)
}

# transfer-trans-verb

sp	{Link*propose*transfer-trans-verb
	(state <s> ^protoDRS <pd> ^DRS <d> ^analysis <a> ^goal <goal>)
	(<goal> ^name clean-up)
	(<pd> ^cond <cond>)
	(<cond> ^kind verbal ^subj <u> ^verb <v> ^obj <w>)
	(<v> ^wvalue <verb> ^wcount <pos>)
  -{(<a> ^verb <a-verb>)
  	(<a-verb> ^source <cond>)}
-->
	(<s> ^operator <o> + <)
	(<o> ^name transfer-trans-verb ^subj <u> ^verb <verb> ^obj <w>
		 ^ordering <pos> ^cond <cond> ^complete? no)}

sp	{Link*apply*transfer-trans-verb
	(state <s> ^operator <o> ^DRS <d> ^analysis <a>)
	(<o> ^name transfer-trans-verb ^subj <u> ^verb <verb> ^obj <w>
		 ^cond <cond>)
	(<d> ^dref <u> <w>)
-->
	(<d> ^cond <new-cond> +)
	(<new-cond> ^kind verbal ^verb <verb> ^subj <u> ^obj <w>)
	(<a> ^verb <a-verb> +)
	(<a-verb> ^source <cond> ^destination <new-cond>)
}

sp	{Link*fail*apply*transfer-trans-verb*cause*needs*transfer-subj-dref
	(state <s> ^operator <o> ^analysis <a>)
	(<o> ^name transfer-trans-verb ^subj <u> ^verb <verb> ^obj <w>
		 ^cond <cond> ^complete? no)
	(<a> -^transfer-dref <u>)
-->
	(<a> ^transfer-dref <u> +)
}

sp	{Link*fail*apply*transfer-trans-verb*cause*needs*transfer-obj-dref
	(state <s> ^operator <o> ^analysis <a>)
	(<o> ^name transfer-trans-verb ^subj <u> ^verb <verb> ^obj <w>
		 ^cond <cond> ^complete? no)
	(<a> -^transfer-dref <w>)
-->
	(<a> ^transfer-dref <w> +)
}

# transfer-date

sp	{Link*propose*transfer-date*month
	(state <s> ^DRS <d> ^analysis <a>)
	(<d> ^cond <cond>)
	(<cond> ^kind verbal)
	(<a> ^verb <a-verb>)
	(<a-verb> ^source <source> ^destination <cond>)
	(<source> ^modifier <modifier>)
	(<modifier> ^wvalue { << January February March April May June July
			August September November December >> <month> } ^wcount <pos>)
  	(<cond> -^month <month>)
-->
	(<s> ^operator <o> + >)
	(<o> ^name transfer-date ^type month ^cond <cond> ^wvalue <month>
		 ^ordering <pos> ^complete? no)}

sp	{Link*propose*transfer-date*year
	(state <s> ^DRS <d> ^analysis <a>)
	(<d> ^cond <cond>)
	(<cond> ^kind verbal)
	(<a> ^verb <a-verb>)
	(<a-verb> ^source <source> ^destination <cond>)
	(<source> ^modifier <modifier>)
	(<modifier> ^wcount <pos> ^wvalue <year> > 31)
  	(<cond> -^year <year>)
-->
	(<s> ^operator <o> + >)
	(<o> ^name transfer-date ^type year ^cond <cond> ^wvalue <year>
		 ^ordering <pos> ^complete? no)}

sp	{Link*propose*transfer-date*has-month-add-day
	(state <s> ^protoDRS <pd> ^DRS <d> ^analysis <a>)
	(<d> ^cond <cond>)
	(<cond> ^kind verbal)
	(<a> ^verb <a-verb>)
	(<a-verb> ^source <source> ^destination <cond>)
	(<source> ^modifier <mod-month>)
	(<mod-month> ^wvalue { << January February March April May June July
			August September November December >> <month> })
	(<pd> ^cond <time> ^dref <u>)
	(<u> ^word <mod-month>)
	(<time> ^kind time ^month <u> ^day.word <word>)
	(<word> ^wvalue <day> ^wcount <pos>)
  	(<cond> -^day <day>)
  	(<cond> ^month <month>)
-->
	(<s> ^operator <o> + >)
	(<o> ^name transfer-date ^type day ^cond <cond> ^wvalue <day>
		 ^ordering <pos> ^complete? no)}

sp	{Link*propose*transfer-date*has-month-add-year
	(state <s> ^protoDRS <pd> ^DRS <d> ^analysis <a>)
	(<d> ^cond <cond>)
	(<cond> ^kind verbal)
	(<a> ^verb <a-verb>)
	(<a-verb> ^source <source> ^destination <cond>)
	(<source> ^modifier <mod-month>)
	(<mod-month> ^wvalue { << January February March April May June July
			August September November December >> <month> })
	(<pd> ^cond <time> ^dref <u>)
	(<u> ^word <mod-month>)
	(<time> ^kind time ^month <u> ^year.word <word>)
	(<word> ^wvalue <year> ^wcount <pos>)
  	(<cond> -^year <year>)
  	(<cond> ^month <month>)
-->
	(<s> ^operator <o> + >)
	(<o> ^name transfer-date ^type year ^cond <cond> ^wvalue <year>
		 ^ordering <pos> ^complete? no)}

sp	{Link*apply*transfer-date
	(state <s> ^operator <o> ^analysis <a>)
	(<o> ^name transfer-date ^type <type> ^cond <cond> ^wvalue <value>
		 ^complete? no)
-->
	(<cond> ^<type> <value>)
	(<a> ^modifier <m> +)
	(<m> ^cond <cond> ^type <type> ^wvalue <value>)
}

# transfer-location-verb-connecting

sp	{Link*propose*transfer-location-verb-connecting
	(state <s> ^protoDRS <pd> ^DRS <d> ^analysis <a>)
	(<d> ^cond <verb-cond>)
	(<pd> ^cond <prep-cond>)
	(<verb-cond> ^kind verbal)
	(<a> ^verb <a-verb>)
	(<a-verb> ^source <source> ^destination <verb-cond>)
	(<source> ^modifier <prep>)
	(<prep-cond> ^prep <prep> ^obj <location>)
	(<location> ^word.wcount <pos>)
	(<prep> ^wvalue at)
  	(<verb-cond> -^location <location>)
-->
	(<s> ^operator <o> + >)
	(<o> ^name transfer-location-verb-connecting ^cond <verb-cond>
		 ^location <location> ^ordering <pos> ^complete? no)}

sp	{Link*apply*transfer-location-verb-connecting
	(state <s> ^operator <o> ^analysis <a>)
	(<o> ^name transfer-location-verb-connecting ^cond <verb-cond>
		 ^location <location>)
-->
	(<verb-cond> ^location <location>)
	(<a> ^modifier <m> +)
	(<m> ^cond <verb-cond> ^location <location>)
}

sp	{Link*fail*apply*transfer-location-verb-connecting*cause*needs*transfer-location-dref
	(state <s> ^operator <o> ^analysis <a>)
	(<o> ^name transfer-location-verb-connecting ^cond <verb-cond>
		 ^location <location> ^complete? no)
	(<a> -^transfer-dref <location>)
-->
	(<a> ^transfer-dref <location> +)
}

# transfer-pos-s

sp	{Link*propose*transfer-pos-s
	(state <s> ^protoDRS <pd> ^DRS <d>)
	(<d> ^cond <verb-cond>)
	(<verb-cond> ^kind verbal ^<< subj obj ido >> <v>)
	(<pd> ^cond <det-cond> <pos-cond>)
	(<det-cond> ^kind det ^arg <v> ^det <pos-s>)
	(<pos-s> ^wcount <loc>)
	(<pos-cond> ^kind pos-s ^arg <u> ^loc <loc>)
  -{(<d> ^cond <cond>)
   	(<cond> ^kind pos-s ^subj <u> ^obj <v>)}
-->
	(<s> ^operator <o> +)
	(<o> ^name transfer-pos-s ^subj <u> ^obj <v> ^ordering <loc>
		 ^complete? no)}

sp	{Link*apply*transfer-pos-s
	(state <s> ^operator <o> ^DRS <d> ^analysis <a>)
	(<o> ^name transfer-pos-s ^subj <u> ^obj <w>)
	(<d> ^dref <u> <w>)
-->
	(<d> ^cond <new-cond> +)
	(<new-cond> ^kind pos-s ^subj <u> ^obj <w>)
}

sp	{Link*fail*apply*transfer-pos-s*cause*needs*transfer-subj-dref
	(state <s> ^operator <o> ^analysis <a>)
	(<o> ^name transfer-pos-s ^subj <u> ^obj <w> ^complete? no)
	(<a> -^transfer-dref <u>)
-->
	(<a> ^transfer-dref <u> +)
}

sp	{Link*fail*apply*transfer-pos-s*cause*needs*transfer-obj-dref
	(state <s> ^operator <o> ^analysis <a>)
	(<o> ^name transfer-pos-s ^subj <u> ^obj <w> ^complete? no)
	(<a> -^transfer-dref <w>)
-->
	(<a> ^transfer-dref <w> +)
}

# transfer-number-superlative

sp	{Link*propose*transfer-number-superlative
	(state <s> ^protoDRS <d> ^goal <goal>)
	(<goal> ^name clean-up)
	(<d> ^cond <det-cond> <noun-cond>)
	(<det-cond> ^kind det ^arg <u> ^number-superlative <num-slat>)
	(<noun-cond> ^kind nominal ^arg <u>)
	(<num-slat> ^wcount <pos> ^wvalue <value>)
	(<noun-cond> -^number-superlative <value>)
-->
	(<s> ^operator <o> + >)
	(<o> ^name transfer-number-superlative ^number-superlative <value>
		 ^cond <noun-cond> ^ordering <pos> ^complete? no)}

sp	{Link*apply*transfer-number-superlative
	(state <s> ^operator <o>)
	(<o> ^name transfer-number-superlative ^number-superlative <value>
		 ^cond <noun-cond> ^complete? no)
-->
	(<noun-cond> ^number-superlative <value> +)
}

# transfer-verb-modifying-prep

sp	{Link*propose*transfer-verb-modifying-prep
	(state <s> ^protoDRS <pd> ^DRS <d> ^analysis <a> ^goal <goal>)
	(<goal> ^name clean-up)
	(<pd> ^cond <source> <prep-cond>)
	(<source> ^kind verbal ^modifier <modifier>)
	(<a> ^verb <a-verb> -^modifier <modifier>)
	(<modifier> ^wcount <pos> ^wvalue <value>)
	(<a-verb> ^source <source> ^destination <dest>)
	(<prep-cond> ^prep <modifier> ^obj <u>)
	(<dest> -^modifying-prep.prep <value>)
-->
	(<s> ^operator <o> + <)
	(<o> ^name transfer-verb-modifying-prep ^verb-cond <dest> ^complete? no
		 ^transfer-dref <u> ^modifying-prep <prep-cond> ^ordering <pos>)}

sp	{Link*apply*transfer-verb-modifying-prep
	(state <s> ^operator <o> ^analysis <a> ^DRS <d>)
	(<o> ^name transfer-verb-modifying-prep ^verb-cond <dest> ^complete? no
		 ^transfer-dref <u> ^modifying-prep <old-prep-cond>)
	(<old-prep-cond> ^prep <modifier>)
	(<modifier> ^wvalue <value>)
-->
	(<a> ^transfer-dref <u> + ^modifier <modifier> +)
	(<dest> ^modifying-prep <new-prep-cond> +)
	(<d> ^dref <u> + ^cond <new-prep-cond> +)
	(<new-prep-cond> ^prep <value> ^obj <u>)
#	(<s> ^operator <o> @)
	}

# transfer-supressed-verb-nominal-relation

sp	{Link*propose*transfer-supressed-verb-nominal-relation
	(state <s> ^protoDRS <pd> ^DRS <d> ^analysis <a> ^goal <goal>)
	(<goal> ^name clean-up)
	(<d> ^cond <modified-cond>)
	(<modified-cond> ^kind nominal ^arg <u> ^modifier <modifier>)
	(<modifier> ^wvalue <value>)
	(<pd> ^cond <modifying-cond>)
	(<modifying-cond> ^kind nominal ^arg <v> ^pred <value>)
  -{(<d> ^cond <verb-cond>)
  	(<verb-cond> ^kind verbal ^subj <u> ^obj <v>)}
  	(<v> ^word.wcount <pos>)
-->
	(<s> ^operator <o> +)
	(<o> ^name transfer-supressed-verb-nominal-relation ^subj <u> ^obj <v>
		 ^ordering <pos> ^complete? no)}

sp	{Link*apply*transfer-supressed-verb-nominal-relation
	(state <s> ^operator <o> ^DRS <d>)
	(<d> ^dref <v>)
	(<o> ^name transfer-supressed-verb-nominal-relation ^subj <u> ^obj <v>)
-->
	(<d> ^cond <new-cond> +)
	(<new-cond> ^kind verbal ^subj <u> ^obj <v>)
}

sp	{Link*fail*apply*transfer-supressed-verb-nominal-relation*cause*needs*transfer-obj-dref
	(state <s> ^operator <o> ^DRS <d> ^analysis <a>)
	(<d> -^dref <v>)
	(<o> ^name transfer-supressed-verb-nominal-relation ^subj <u> ^obj <v>
		 ^complete? no)
-->
	(<a> ^transfer-dref <v> +)
}

# transfer-proper-noun

sp	{Link*propose*transfer-proper-noun
	(state <s> ^analysis <a> ^DRS <d> ^goal <goal>)
	(<goal> ^name clean-up)
	(<d> ^dref <u> ^cond <d-cond>)
	(<d-cond> ^kind nominal ^proper-noun <prop-noun> ^arg <u>)
	(<prop-noun> ^entry <v>)
	(<d> -^dref <v>)
	(<v> ^word.wcount <pos>)
-->
	(<s> ^operator <o> +)
	(<o> ^name transfer-dref ^dref <v> ^ordering <pos> ^complete? no)}

# transfer-be-complement

sp	{Link*propose*transfer-be-complement
	(state <s> ^DRS <d> ^analysis <a>)
	(<d> ^cond <be-cond> <complement-cond>)
	(<a> ^verb <a-be> <a-complement>)
	(<a-be> ^source <be-cond-source> ^destination <be-cond>)
	(<a-complement> ^source <complement-cond-source>
					^destination <complement-cond>)
	(<be-cond-source> ^be-complement <verb>)
	(<complement-cond-source> ^verb <verb>)
	(<verb> ^wcount <pos>)
	(<be-cond> -^complement-cond <complement-cond>)
-->
	(<s> ^operator <o> + >)
	(<o> ^name transfer-be-complement ^complement-cond <complement-cond>
		 ^be-cond <be-cond> ^ordering <pos> ^complete? no)}

sp	{Link*apply*transfer-be-complement
	(state <s> ^operator <o>)
	(<o> ^name transfer-be-complement ^complement-cond <complement-cond>
		 ^be-cond <be-cond> ^ordering <pos> ^complete? no)
-->
	(<complement-cond> ^be-cond <be-cond>)
	(<be-cond> ^complement-cond <complement-cond>)
}

# transfer-date-identified-as-proper-noun

sp	{Link*propose*transfer-date-identified-as-proper-noun
	(state <s> ^DRS <d> ^analysis <a>)
	(<d> ^cond <verb-cond> <noun-cond>)
	(<verb-cond> ^kind verbal ^obj <v>)
	(<noun-cond> ^kind nominal ^arg <v> ^proper-noun <pn> ^pred <year> > 31)
	(<v> ^word.wcount <pos>)
	(<a> -^date-as-proper-noun-identified <v>)
-->
	(<s> ^operator <o> + >)
	(<o> ^name transfer-date-identified-as-proper-noun ^ordering (- <pos> 1)
		 ^cond <verb-cond> ^complete? no ^wvalue <year> ^proper-noun <pn>
		 ^rem-cond <noun-cond>)}

sp	{Link*apply*transfer-date-identified-as-proper-noun
	(state <s> ^operator <o> ^analysis <a>)
	(<o> ^name transfer-date-identified-as-proper-noun ^ordering <pos>
		 ^cond <verb-cond> ^complete? no ^wvalue <year> ^proper-noun <pn>)
	(<verb-cond> ^obj <v>)
	(<pn> ^entry <u>)
	(<u> ^word.wcount <pos>)
-->
	(<verb-cond> ^obj <v> - <u> +)
	(<verb-cond> ^year <year>)
	(<a> ^modifier <m> +)
	(<m> ^cond <cond> ^type year ^wvalue <year>)
	(<a> ^date-as-proper-noun-identified <v> +)
}

# transfer-negation

sp	{Link*propose*transfer-negation
	(state <s> ^protoDRS <pd> ^DRS <d> ^analysis <a> ^goal <goal>)
	(<goal> ^name clean-up)
	(<pd> ^cond <source>)
	(<source> ^kind verbal ^neg not)
	(<a> ^verb <a-verb>)
	(<a-verb> ^source <source> ^destination <dest>)
	(<dest> -^neg not)
-->
	(<s> ^operator <o> + <)
	(<o> ^name transfer-negation ^verb-cond <dest> ^complete? no
		 ^ordering -1)}

sp	{Link*apply*transfer-negation
	(state <s> ^operator <o>)
	(<o> ^name transfer-negation ^verb-cond <dest> ^complete? no)
-->
	(<dest> ^neg not +)
}

# transfer-modal

sp	{Link*propose*transfer-modal
	(state <s> ^protoDRS <pd> ^DRS <d> ^analysis <a> ^goal <goal>)
	(<goal> ^name clean-up)
	(<pd> ^cond <source> <adv-cond>)
	(<source> ^kind verbal ^adv <adv-cond>)
	(<a> ^verb <a-verb>)
	(<a-verb> ^source <source> ^destination <dest>)
	(<adv-cond> ^adv <adv>)
	(<adv> ^wcount <pos> ^wvalue { <mode> << probably perhaps >> })
	(<dest> -^mode)
-->
	(<s> ^operator <o> + <)
	(<o> ^name transfer-modal ^verb-cond <dest> ^complete? no
		 ^mode <mode> ^ordering <pos>)}

sp	{Link*apply*transfer-modal
	(state <s> ^operator <o> ^analysis <a> ^DRS <d>)
	(<o> ^name transfer-modal ^verb-cond <dest> ^complete? no
		 ^mode <mode>)
-->
	(<dest> ^mode <mode> +)
}

## operator tie resolutions
# prefer transfer-trans-verb over transfer-intrans-verb

sp	{Link*prefer*transfer-trans-verb*over*transfer-intrans-verb
	(state <s> ^attribute operator ^choices multiple ^impasse tie
			   ^superstate <ss>)
	(<s> ^item <trans> { <> <trans> <intrans> })
	(<trans> ^name transfer-trans-verb ^cond <cond>)
	(<intrans> ^name transfer-intrans-verb ^cond <cond>)
-->
	(<ss> ^operator <trans> > <intrans>)}
