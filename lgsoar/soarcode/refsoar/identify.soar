# File: identify.soar
# Author: William Taysom
# Created: Feb. 23, 2001
#
# Desc: Implements identify operators. (cleanup)
#
# Identify Rules Implemented:
#			identify-pos-pro, identify-noun-modifying-verb,
#			identify-relative-intrans-verb, identify-be-complement,
#			identify-noun-modifying-of
#
# TO DO:
#

## Identify rules:
# identify-pos-pro

sp	{Link*propose*identify-pos-pro
   (state <s> ^protoDRS <pd> ^goal <goal>)
   (<goal> ^name clean-up)
   (<pd> ^cond <det-cond>)
   (<det-cond> ^kind det ^det <pos-pro> ^arg <u>)
   (<pos-pro> ^wcount <pos> ^wvalue << my our your his her its their
                    My Our Your His Her Its Their >> )
  -{(<pd> ^cond <pos-cond>)
    (<pos-cond> ^kind pos-s ^loc <pos>)}
-->
   (<s> ^operator <o> +)
   (<o> ^name identify-pos-pro ^pos-pro <pos-pro> ^ordering <pos>
        ^complete no)}

sp	{Link*apply*identify-pos-pro
   (state <s> ^operator <o> ^protoDRS <pd>)
   (<o> ^name identify-pos-pro ^pos-pro <pos-pro> ^complete no)
   (<pos-pro> ^wcount <pos> ^wvalue <value>)
-->
   (<pd> ^dref <u> + ^cond <pos-cond> + <nom-cond> +)
   (<u> ^word <pos-pro>)
   (<pos-cond> ^kind pos-s ^arg <u> ^loc <pos>)
   (<nom-cond> ^kind nominal ^arg <u> ^pred <value>)
}

# identify-noun-modifying-verb

sp	{Link*propose*identify-noun-modifying-verb
   (state <s> ^protoDRS <pd> ^goal <goal>)
   (<goal> ^name clean-up)
   (<pd> ^cond <noun-cond> <verb-cond>)
   (<noun-cond> ^kind nominal ^arg <u> ^modifier <verb>)
   (<verb-cond> ^kind verbal ^verb <verb>)
   (<verb> ^wcount <pos>)
   (<verb-cond> -^rel-obj)
-->
   (<s> ^operator <o> +)
   (<o> ^name identify-noun-modifying-verb ^cond <verb-cond> ^rel-obj <u>
        ^ordering <pos> ^complete no)}

sp	{Link*apply*identify-noun-modifying-verb
   (state <s> ^operator <o>)
   (<o> ^name identify-noun-modifying-verb ^cond <verb-cond> ^rel-obj <u>
        ^ordering <pos> ^complete no)
-->
   (<verb-cond> ^rel-obj <u> +)
}

# identify-relative-intrans-verb

sp	{Link*propose*identify-relative-intrans-verb
   (state <s> ^protoDRS <pd> ^goal <goal>)
   (<goal> ^name clean-up)
   (<pd> ^cond <cond>)
   (<cond> ^kind verbal ^verb.wcount <pos> ^rel-obj <u> -^subj)
-->
   (<s> ^operator <o> +)
   (<o> ^name identify-relative-intrans-verb ^cond <cond> ^rel-obj <u>
        ^ordering <pos> ^complete no)}

sp	{Link*apply*identify-relative-intrans-verb
   (state <s> ^operator <o>)
   (<o> ^name identify-relative-intrans-verb ^cond <cond> ^rel-obj <u>
        ^ordering <pos> ^complete no)
-->
   (<cond> ^subj <u> +)
}

# identify-be-complement

sp	{Link*propose*identify-be-complement*prep
   (state <s> ^protoDRS <pd> ^goal <goal>)
   (<goal> ^name clean-up)
   (<pd> ^cond <prep-cond> <verb-cond>)
   (<prep-cond> ^kind prep ^obj <u> ^prep <prep>)
   (<verb-cond> ^kind verbal ^be-complement <prep>)
   (<prep> ^wcount <pos>)
   (<verb-cond> -^modifier <prep>)
-->
   (<s> ^operator <o> +)
   (<o> ^name identify-be-complement ^cond <verb-cond> ^modifier <prep>
        ^ordering <pos> ^complete no ^type prep)}

sp	{Link*apply*identify-be-complement*prep
   (state <s> ^operator <o>)
   (<o> ^name identify-be-complement ^cond <verb-cond> ^modifier <prep>
        ^ordering <pos> ^complete no ^type prep)
-->
   (<verb-cond> ^modifier <prep> +)
}

sp	{Link*propose*identify-be-complement*verb
   (state <s> ^protoDRS <pd> ^goal <goal> ^DRS <d> ^analysis <a>)
   (<goal> ^name clean-up)
   (<pd> ^cond <complement-cond> <verb-cond>)
   (<complement-cond> ^kind verbal ^verb <verb>)
   (<verb-cond> ^kind verbal ^be-complement <verb>)
   (<verb> ^wcount <pos>)
  -{(<a> ^verb <a-verb>)
    (<a-verb> ^source <complement-cond>)}
-->
   (<s> ^operator <o> +)
   (<o> ^name identify-be-complement ^complement <complement-cond>
        ^type verb ^ordering <pos> ^complete no)}

sp	{Link*apply*identify-be-complement*verb
   (state <s> ^operator <o> ^DRS <d> ^analysis <a>)
   (<o> ^name identify-be-complement ^complement <complement-cond>
        ^type verb ^ordering <pos> ^complete no)
   (<complement-cond> ^verb <verb>)
   (<verb> ^wvalue <wvalue>)
-->
   (<d> ^cond <new-cond> +)
   (<new-cond> ^verb <wvalue> ^kind verbal)
   (<a> ^verb <a-verb> +)
   (<a-verb> ^source <complement-cond> ^destination <new-cond>)
}

# identify-noun-modifying-of

sp	{Link*propose*identify-noun-modifying-of
   (state <s> ^protoDRS <pd> ^goal <goal>)
   (<goal> ^name clean-up)
   (<pd> ^cond <noun-cond> <of-cond>)
   (<noun-cond> ^kind nominal ^arg <u> ^modifier <of>)
   (<of-cond> ^kind prep ^prep <of> ^obj <obj>)
   (<of> ^wcount <pos> ^wvalue of)
   (<noun-cond> -^of-spec <obj>)
-->
   (<s> ^operator <o> +)
   (<o> ^name identify-noun-modifying-of ^cond <noun-cond> ^of-spec <obj>
        ^ordering <pos> ^complete? no)}

sp	{Link*apply*identify-noun-modifying-of
   (state <s> ^operator <o> ^DRS <d>)
   (<o> ^name identify-noun-modifying-of ^cond <noun-cond> ^of-spec <obj>)
   (<d> ^dref <obj>)
-->
   (<noun-cond> ^of-spec <obj> +)
}

sp	{Link*fail*apply*identify-noun-modifying-of*cause*needs*transfer-obj-dref
   (state <s> ^operator <o> ^analysis <a>)
   (<o> ^name identify-noun-modifying-of ^cond <noun-cond> ^of-spec <obj>
        ^complete? no)
   (<a> -^transfer-dref <obj>)
-->
   (<a> ^transfer-dref <obj> +)
}

## operator tie resolutions
# prefer operator with lowest ordering value

sp	{Link*prefer*operator-with-lowest-ordering-value
   (state <s> ^attribute operator ^choices multiple ^impasse tie
              ^superstate <ss>)
   (<s> ^item <low> { <> <low> <high> })
   (<low> ^ordering <low-value>)
   (<high> ^ordering <high-value> > <low-value>)
-->
   (<ss> ^operator <low> > <high>)}
