source load.soar
source bolt-message-interpretation/general.soar
source bolt-message-interpretation/choose-message-type.soar
source bolt-message-interpretation/interpret-object.soar
source bolt-message-interpretation/interpret-relation.soar
source bolt-message-interpretation/interpret-verb.soar
source bolt-message-interpretation/interpret-object-message.soar
source bolt-message-interpretation/interpret-object-question.soar
source bolt-message-interpretation/interpret-relation-message.soar
source bolt-message-interpretation/interpret-relation-question.soar
source bolt-message-interpretation/interpret-verb-command.soar

# BOLT/LGSoar integration productions go here

# prefer any operator without a priority (non-LGSoar) to one with a priority
sp {prefer*non-LG
   (state <s> ^operator <o> +
              ^operator <o2> +)
   (<o> ^priority <any>)
   (<o2> -^priority)
-->
   (<s> ^operator <o2> > <o>)
}

# replacement for the rule in refsoar/global.soar that halts
# instead, remove sentences from input, which will cause the problem-space to
# retract
sp {global*apply*processing-complete 
  (state <s> ^operator.name processing-complete
           ^predicates-generated true
           ^final-predicates <fp>)
--> 
  (<s> ^lgsoar-predicates <fp>
       ^predicates-generated true -)
}

sp {global*apply*processing-complete*mark-sentences
  (state <s> ^operator.name processing-complete
             ^io.input-link.lg <lg>)
   (<lg> ^sentence <sen>)
-->
   (<sen> ^processed true)
   # removes the io.lgsentence since top-state*lg*init*sentence stops matching
   # (refsoar/activate.soar), removal of lgsentence causes
   # Activate*create*space to retract, removing most lgsoar state
}

