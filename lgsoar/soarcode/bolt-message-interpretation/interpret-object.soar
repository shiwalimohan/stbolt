# interpret-object handles not just plain objects, but also relational
# information about them

# table(N6)
# DEF(N4)
# DEF(N6)
# block(N4)
# on(N4,N6)
# IS_HINT(on,N4)

# object.word block
#       .specifier DEF
# relation.word on
#         .p1-val (ref to object above)
#         .p2-val.word table
#                .specifier DEF


# return immediately if this is just a plain object
sp {interpret-object*elaborate*single-primitive-passthrough
   (state <s> ^name interpret-object
              ^predicates <ap>
              ^objects.object <po>
             -^objects.object <> <po>)
   (<po> ^predicates.interpretation <int>)
-->
   (<ap> ^interpretation.object <int>)
}

# not a plain object:
# either the root statement is an "is" about a relation,
# or this was called as a subpart of parsing a verb direct object or similar,
# in which case the parent must make a fake PRIMARY_OBJECT predicate
# (non-relation "is" like "the block is red" appears as a plain object)

sp {interpret-object*elaborate*interpretation*on*state
   (state <s> ^name interpret-object)
-->
   (<s> ^interpretation <int>)
}

sp {interpret-object*elaborate*primitive-object
   (state <s> ^name interpret-object
              ^interpretation <int>
              ^predicates.predicate <pr>)
   (<pr> ^outer PRIMARY_OBJECT
         ^inner1 <po>)
   (<po> ^predicates.interpretation <point>)
-->
   (<s> ^primary-object <po>)
   (<int> ^object <point>)
   (<s> ^primary-object-predicates <pop>)
}

sp {interpret-object*
