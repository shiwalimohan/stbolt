#### propose explanation operator, when popping of the segment from the stack when the reason for popping is "completed action <new action>". because the agent is relying on instructor to determine when the action has successfully ended, it means that the operator application is unkown to the agent and should be learned

### for coding purposes proposing explain operator at topstate; fix it such that it fires only at appropriate places

### we are popping of the top of the stack now; note that the segment at the top of the current stack contains the operator that we are trying to learn. 

sp {topstate*propose*explain*operator
   (state <s> ^topstate <s>
   	      ^conversation.stack.segment <top>
	      -^operator.name push-segment)
   (<top> ^purpose <p>
   	  ^next <next>)
   (<p> ^type explanation)
-->
   (<s> ^operator <op> + >)
   (<op> ^name explain
   	 ^segment <next>)
}


sp {elaborate*explain*query
   (state <s> ^name explain
   	      ^superstate.operator <op>)
   (<op> ^name explain
   	 ^segment <top>)
-->
   (<s> ^segment <top>)
} 

## copy imagined state from superstate
sp {copy*state*type
   (state <s> ^superstate.kind imagined)
-->
   (<s> ^kind imagined)
}



## in the explain operator, query episodic memory for the time when segment top was first seen on the top of the stack

sp {explain*retrieve*episode*episodic*memory
   (state <s> ^name explain
   	      ^segment <top>
	      ^epmem.command <epcom>)
   (<top> ^epmem-id  <eid>)
-->
   (<epcom> ^retrieve <eid>)
} 

### if the retrieval is successful; copy all the relevant material from the retrieved episode to this state

sp {explain*copy*retrieved*episode
   (state <s> ^name explain
   	      ^epmem.result <res>)
   (<res> ^retrieved <ret>
   	  ^memory-id <mem-id>)
   (<ret> ^missiles <m>
   	^blocked <b>
	^x <x>
	^y <y>
	^direction <dr>)
-->
   (<s> ^missiles <m>
   	^blocked <b>
	^x <x>
	^y <y>
	^direction <dr>
	^next-id <mem-id>)
}

### in the now generated state; proposed the verb on the segment
sp {explain*propose*segment-verb
   (state <s> ^name explain
   	      ^segment <seg>)
   (<seg> ^purpose <p>)
   (<p> ^type environmental-action
   	^satisfaction <ps>) 
   (<ps> ^action-event <info>)
   (<info> ^verb <verb-name>)
-->
   (<s> ^operator <op> + >)
   (<op> ^name <verb-name>)
}

sp {explain*apply*learning-operator
   (state <s> ^name explain
   	      ^operator <op>)
   (<op> ^name <verb-name>)
-->
   (<s> ^learning-operator <verb-name>)
} 

### copy to all the substate
sp {copy*learning-operator
   (state <s> ^superstate.learning-operator <verb-name>)
-->
   (<s> ^learning-operator <verb-name>)
}



### copy structures in the new instructed section

sp {explain*copy*superstate*relevant*structures*missiles
   (state <s> ^superstate <ss>)
   (<ss> ^name explain
   	 ^missiles <m>)
-->
   (<s> ^missiles <m>)
}

sp {explain*copy*superstate*relevant*structures*blocked
   (state <s> ^superstate <ss>)
   (<ss> ^name explain
   	 ^blocked <m>)
-->
   (<s> ^blocked <m>)
}

sp {explain*copy*superstate*relevant*structures*x
   (state <s> ^superstate <ss>)
   (<ss> ^name explain
   	 ^x <m>)
-->
   (<s> ^x <m>)
}
sp {explain*copy*superstate*relevant*structures*y
   (state <s> ^superstate <ss>)
   (<ss> ^name explain
   	 ^y <m>)
-->
   (<s> ^y <m>)
}

sp {explain*copy*superstate*relevant*structures*direction
   (state <s> ^superstate <ss>)
   (<ss> ^name explain
   	 ^direction <m>)
-->
   (<s> ^direction <m>)
}



### --- elaborate problem-space
sp {new-operator*elaborate*problem-space
   (state <s> ^name {<sname> <> evaluate-operator <> operator-tie <> selection <> explain})
-->  
   (<s> ^problem-space <p>)
   (<p> ^name <sname>
   	^default-state-copy yes
	^one-level-attributes blocked missiles x y direction)
}


sp {new-operator*desired
   (state <s> ^name <sname>
   	      ^learning-operator <sname>	
	      ^superstate.name explain)
   -->
   (<s> ^desired <d>)
   (<d> ^killed tank)
}
   

### --- reject operator if desired state is reached

sp {new-operator*reject
   (state <s> ^name <sname>
   	      ^superstate <ss> 
	      ^desired <d>
	      ^<arg> <val>)
   (<sop> ^name <sname>)
   (<d> ^<arg> <val>)
   (<ss> ^name explain
   	 ^operator <sop>)
-->
   (<ss> ^operator <sop> -
   	 ^successful-explanation <sname>)
}


### once successful explanation has been reached; pop the pupose; see resolve-stack in conversation-manager

sp {explain*success
   (state <s> ^name explain
   	      ^successful-explanation <op-name>
	      ^superstate <ss>)
-->
   (<ss> ^successful-explanation <op-name>)
}
	      