# Proposes learn-val when the top segment on the interaction stack has the purpose of learning a value
# segment.purpose <p>
# (<p> ^type learn-val
#	   ^parameters.internal <internal-val>
#	   ^parameters.external <external-val>
#      ^parameters.attribute <external-att>) !!! OPTIONAL !!!
  
# Proposes learn-val when the top segment on the interaction stack has the purpose of learning a value
sp {propose*learn-val
   (state <s> ^topstate <s>
              ^interaction.stack.segment.purpose <p>)
   (<p> ^type learn-val
          ^parameters.internal <internal-val>
          ^parameters.external <external-val>)
-->
   (<s> ^operator <o> +)
   (<o> ^name learn-val
        ^category object-processing
        ^internal <internal-val>
        ^external <external-val>)
}

sp {elaborate*learn-val*attribute
   (state <s> ^operator <o> +
              ^interaction.stack.segment.purpose <p>)
	(<o> ^name learn-val)
 	(<p> ^type learn-val
         ^parameters.attribute <external-att>)
-->
   (<o> ^attribute <external-att>)
}

# Stores the learned value in semantic memory
sp {apply*learn-val*update*smem
   (state <s> ^operator <o>
              ^smem.command <smem-cmd>)
   (<o> ^name learn-val
        ^internal <internal-val>
        ^external <external-val>)
-->
   (<smem-cmd> ^store <val>)
   (<val> ^type value ^internal <internal-val> ^external <external-val>)
}

# Stores the attribute-val matching in semantic memory
sp {apply*learn-val*update*smem*val2att
   (state <s> ^operator <o>
              ^smem.command <smem-cmd>)
   (<o> ^name learn-val
        ^external <external-val>
        ^attribute <external-att>)
   -{(<s> ^topstate.object.mapping.att-val-pair <av-pair>)
     (<av-pair> ^att.external <external-att>
                ^val.external <external-val>)}
-->
   (<smem-cmd> ^store <val2att>)
   (<val2att> ^type val2att ^value <external-val> ^attribute <external-att>)
}

# Updates all objects that have that value with the external representation
sp {apply*learn-val*update*object
   (state <s> ^operator <o>
              ^topstate.object <obj>)
   (<o> ^name learn-val
        ^internal <internal-val>
        ^external <external-val>)
   (<obj> ^mapping.att-val-pair.val <val>)
   (<val> ^internal <internal-val>)
-->
   (<val> ^external <external-val>)
}

# Removes unneeded attribute-value pairs (merged into another av-pair)
sp {apply*learn-val*remove*av-pairs
   (state <s> ^operator <o> 
              ^topstate.object.mapping <map>)
   (<o> ^name learn-val
        ^internal <internal-val>
        ^external <external-val>)
   (<map> ^att-val-pair <av-pair>)
   (<av-pair> ^val.external <external-val>
             -^val.internal
             -^att.internal)
-->
   (<map> ^att-val-pair <av-pair> -)
}

sp {apply*learn-val*mark*satisfied
   (state <s> ^operator.name learn-val
              ^status <status>)
-->
   (<status> ^performed.learning-event value)
}

sp {apply*learn-val*remove*queries
   (state <s> ^operator <o>
              ^topstate.queries <queries>)
   (<o> ^name learn-val
        ^internal <internal-val>)
   (<queries> ^query <q>)
   (<q> ^type value-question
        ^att-val-pair.val.internal <internal-val>)
-->
   (<queries> ^query <q> -)
}


              