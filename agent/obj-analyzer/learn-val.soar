# learn-val
# proposed when a structure is placed on the top-state that 
#	contains information about a learned value
# <s> ^learned-val <lv>
# <lv> ^internal 'word'
#	   ^external 'word'

sp {propose*learn-val
   (state <s> ^name obj-analyzer
              ^learned-val <lv>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name learn-val
        ^learned-val <lv>)
}

# Stores the learned value in semantic memory
sp {apply*learn-val*update*smem
   (state <s> ^name obj-analyzer
              ^operator <o>
              ^smem.command <smem-cmd>)
   (<o> ^name learn-val
        ^learned-val <lv>)
   (<lv> ^internal <internal-val>
         ^external <external-val>)
-->
   (<smem-cmd> ^store <val>)
   (<val> ^type value ^internal <internal-val> ^external <external-val>)
}

# Updates all objects that have that value with the external representation
sp {apply*learn-val*update*object
   (state <s> ^name obj-analyzer
              ^operator <o>
              ^object <obj>)
   (<o> ^name learn-val
        ^learned-val <lv>)
   (<lv> ^internal <internal-val>
         ^external <external-val>)
   (<obj> ^mapping.att-val-pair <av-pair>)
   (<av-pair> ^val <val>
              ^att.external <external-att>)
   (<val> ^internal <internal-val>)
-->
   (<obj> ^changed true)
   (<val> ^external <external-val>)
}

# Removes the learned-val from the top-state
sp {apply*learn-val*remove*learned-val
   (state <s> ^name obj-analyzer
              ^operator <o>
              ^learned-val <lv>)
   (<o> ^name learn-val
        ^learned-val <lv>)
-->
   (<s> ^learned-val <lv> -)
}

sp {apply*learn-val*remove*unknown
   (state <s> ^name obj-analyzer
              ^operator <o>
              ^object.desc <desc>)
   (<o> ^name learn-val
        ^learned-val.external <value>)
   (<desc> ^unknown <value>)
-->
   (<desc> ^unknown <value> -)
}
              