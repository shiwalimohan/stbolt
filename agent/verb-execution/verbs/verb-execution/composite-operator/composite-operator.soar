### composite operator has the following argumentation
### object arguments
### _metadata
### 
##
##
## General application rules for composite operators
##

### elaborate composite-operators
sp {composite-operator*elaborate*state
   (state <s> ^name <sname>
   	      ^superstate.operator <sop>)
   (<sop> ^_metadata.map-id <map-id>
   	  ^category composite-action)
   (<map-id> ^goal <goal-id>
   	     ^problem-space <ps-id>
	     ^procedural <proc-id>)
-->
   (<s> ^application-state composite-action
   	^goal-id <goal-id>
	^problem-space-id <ps-id>
	^map-id <map-id>
	^procedural-id <proc-id>)
}



### retrieve and assign goal to composite-operators
sp {composite-operator*propose*assign-goal
   (state <s> ^name <sname>
   	      ^superstate.operator <sop>
	      -^desired <any>
	      ^goal-id <glid>
	      ^application-state composite-action)
 -->
   (<s> ^operator <op> + >)
   (<op> ^name assign-goal
   	 ^long-term-id <glid>
	 ^category explanation
	 ^superoperator <sop>)
}


## retrieve and assign the problem-space for composite-operators
sp {composite-operator*propose*assign-problem-space
   (state <s> ^name <sname>
   	      ^superstate.operator <sop>
	      ^desired <any>
	      -^generated
	      ^problem-space-id <pid>
	      ^procedural-id <proc-id>
	      ^map-id <map>
	      ^application-state composite-action)
-->
   (<s> ^operator <op> + >)
   (<op> ^name assign-problem-space
   	 ^problem-space-id <pid>
	 ^map-id <map>
	 ^procedural-id <proc-id>)
}

### propose problem-space-operators if any
sp {composite-operator*propose*problem-space-operators
   (state <s> ^name <sname>
	      ^application-state composite-action
	      ^problem-space-operator <op>)
-->
   (<s> ^operator <op> +)
}


### assign-problem-space is better than composite-action
sp {composite-operator*prefer*assign-problem-space
   (state <s> ^operator <op1> +
   	      ^operator <op2> +)
   (<op1> ^name assign-problem-space)
   (<op2> ^category composite-action)
-->
   (<s> ^operator <op1> > <op2>)
}

## mark successful application of a composite-operator
## retract a composite-operator if its desired state is reached
sp {composite-operator*reject
   (state <s> ^name <sname>
   	      ^superstate <ss> 
	      ^desired <d>
	      ^success <d>)
   (<sop> ^name <sname>)
   (<ss> ^name explain
   	 ^operator <sop>)
-->
   (<ss> ^operator <sop>
   	 ^successful-explanation <sname>
	  ^category explanation)
}


sp {propose*composite*operator*elaborate*success
   (state <s> ^name <sname>
   	      ^superstate <ss>
	      -^learning-operator <any>)
   (<ss> ^operator <sop>
   	 ^indexed-operator <iop>)
   (<sop> ^category composite-action)
   (<sop> ^name <sname>)
   (<s> ^desired <d>
   	^success <d>)
-->
   (<s> ^operator <op> + > !)
   (<op> ^name mark-success
	 ^indexed-operator <iop>
	  ^category explanation)
}

sp {apply*composite*operator*elaborate*success
   (state <s> ^operator <op>
   	      ^superstate <ss>
	      ^topstate.status <status>)
   (<op> ^name mark-success
	 ^indexed-operator <iop>)
   (<iop> ^information <info>)
 -->
   (<ss> ^indexed-operator <iop> -)
   (<status> ^performed.action-event <e>)
   (<e> ^type <info>)
}