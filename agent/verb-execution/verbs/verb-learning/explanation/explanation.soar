#### propose explanation operator, when popping of the segment from the stack when the reason for popping is "completed action <new action>". because the agent is relying on instructor to determine when the action has successfully ended, it means that the operator application is unkown to the agent and should be learned

### for coding purposes proposing explain operator at topstate; fix it such that it fires only at appropriate places

sp {topstate*propose*explain*operator
   (state <s> ^topstate <s>
   	      ^interaction.stack.segment <top>
	      -^operator.name push-segment
	      -^status.performed.learning-event.type explanation
	      -^status.type unknown-goal)
   (<top> ^purpose <p>
   	  ^next <next>)
   (<p> ^type explanation)
-->
   (<s> ^operator <op> + >)
   (<op> ^name explain
   	 ^segment <next>
	 ^category explanation)
}

sp {elaborate*explain*query
   (state <s> ^name explain
   	      ^superstate.operator <op>)
   (<op> ^name explain
   	 ^segment <top>)
-->
   (<s> ^segment <top>)

} 

## in the explain operator, query episodic memory for the time when segment top was first seen on the top of the stack

sp {explain*retrieve*episode*episodic*memory*2
   (state <s> ^name explain
   	      ^segment <seg>
	      ^epmem.command <epcom>)
   (<seg> ^epmem-id <id>)
-->
   (<epcom> ^retrieve <id>)
} 

### if the retrieval is successful; copy all the relevant attributes from the retrieved episode to this state

sp {explain*copy*retrieved*episode*object
   (state <s> ^name explain
   	      ^epmem.result <res>)
   (<res> ^retrieved <ret>
   	  ^memory-id <mem-id>)
   (<ret> ^object <obj>)
   -->
   (<s> ^object <obj>)
}

sp {explain*copy*retrieved*episode*open*object
   (state <s> ^name explain
   	      ^epmem.result <res>)
   (<res> ^retrieved <ret>
   	  ^memory-id <mem-id>)
   (<ret> ^open <obj>)
   -->
   (<s> ^open <obj>)
}

sp {explain*copy*retrieved*episode*closed*object
   (state <s> ^name explain
   	      ^epmem.result <res>)
   (<res> ^retrieved <ret>
   	  ^memory-id <mem-id>)
   (<ret> ^closed <obj>)
   -->
   (<s> ^closed <obj>)
}

sp {explain*copy*retrieved*episode*on*object
   (state <s> ^name explain
   	      ^epmem.result <res>)
   (<res> ^retrieved <ret>
   	  ^memory-id <mem-id>)
   (<ret> ^on <obj>)
   -->
   (<s> ^on <obj>)
}

sp {explain*copy*retrieved*episode*off*object
   (state <s> ^name explain
   	      ^epmem.result <res>)
   (<res> ^retrieved <ret>
   	  ^memory-id <mem-id>)
   (<ret> ^off <obj>)
   -->
   (<s> ^off <obj>)
}


sp {explain*copy*retrieved*episode*self
   (state <s> ^name explain
   	      ^epmem.result <res>)
   (<res> ^retrieved <ret>
   	  ^memory-id <mem-id>)
   (<ret> ^self <obj>)
   -->
   (<s> ^self <obj>)
}

### in the generated state, propose the composite-operator being learned on the segment
sp {explain*propose*segment-verb
   (state <s> ^name explain
   	      ^segment <seg>)
   (<seg> ^purpose <p>)
   (<p> ^indexed-operator <map-op>) 
   (<map-op> ^name <name>
   	     ^_metadata <met>)
-->
   (<s> ^operator <new-op> + >)
   (<new-op> ^name <name>
   	     ^category explanation
   	     ^category composite-action
	     ^_metadata <met>)
}

sp {explain*propose*segment-verb*elaborate
   (state <s> ^name explain
   	      ^segment.purpose.indexed-operator <map-op>	
	      ^operator <op> +
	      ^object <obj>)
   (<op> ^name <name>)
   (<map-op> ^name <name>
   	     ^<arg> <val>)
   (<val> ^id <id>)
   (<obj> ^id <id>)
   -->
   (<op> ^<arg> <obj>)
   (<obj> ^focus (concat <name> <arg>))
}

### elaborate focus for objects in explanation
sp {explain*propose*segment-verb*elaborate*goal
   (state <s> ^name explain
   	      ^segment.purpose.indexed-operator <map-op>
	      ^operator <op> +
	      ^object <obj>)
   (<op> ^name <name>)
   (<map-op> ^name <name>
	     ^_metadata.map-id.goal.<prep>.<arg> <sobj>)
   (<sobj> ^id <id>)
   (<obj> ^id <id>)
   -->
   (<obj> ^focus (concat <name> <arg>))
}

### --- mark that the desired state of the operator is reached
sp {composite-operator*mark-success
   (state <s> ^name <sname>
   	      ^superstate <ss> 
	      ^desired <d>
	      ^success <d>)
   (<sop> ^name <sname>)
   (<ss> ^name explain
   	 ^operator <sop>)
-->
   (<ss> ^operator <sop> +
   	 ^successful-explanation <sname>
	 ^category explanation)
}



### once successful explanation has been reached; pop the pupose; see resolve-stack in conversation-manager

sp {explain*success
   (state <s> ^name explain
   	      ^successful-explanation <op-name>
	      ^topstate.status <status>)
-->
   (<status> ^performed.learning-event <e>)
   (<e> ^type explanation)
}
	      

