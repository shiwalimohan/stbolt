## elaborate object referents

sp {elaborate*object-referents*from*indexed-operator
   (state <s> ^topstate <s> 
   	      ^interaction <int>
	      ^smem.command <scomm>)
   (<int> ^referents.objects <robj>
   	  ^segments.segment <seg>)
   (<seg> ^purpose.indexed-operator <iop>)
   (<iop> ^{<arg1> <> name <> _relation <> _metadata <> goal <> applied <> category <> indexed-operator <> information <> mapping <> matched} <obj1>)
-->
   (<robj> ^ref <ref1>
   	   ^object <obj1>)
   (<ref1> ^object <obj1>
   	   ^segment <seg>)
#   (<scomm> ^store <obj1>) ### store all referents in the focus in semantic memory
}

sp {elaborate*referent-object*from*segment*info
   (state <s> ^topstate <s>
              ^interaction <int>)
   (<int> ^stack.segment <seg>
          ^referents.objects <robj>)
   (<seg> ^info.referent-object <obj>)
-->
   (<robj> ^ref <ref>
           ^object <obj>)
   (<ref> ^object <obj>
          ^segment <seg>)
}

sp {store*objects*for*activation
   (state <s> ^interaction.referents.objects.object <obj>
   	      ^operator <op>
	      ^smem.command <scomm>
	      ^topstate <s>)
   (<op> ^<arg> <obj>
   	 ^category << primitive-action composite-action >>)
   (<obj> ^smem-rep <rep>)
-->
   (<scomm> ^store <rep>)
}

##semantic memory commands
sp {topstate*operator*clear*smem*buffer
   (state <s> ^topstate <s>
   	      ^smem.command <scomm>
	      ^operator <op>)
   (<op> -^category << primitive-action composite-action >>)
   (<scomm> ^store <any>)
-->
   (<scomm> ^store <any> -)
}
   
   