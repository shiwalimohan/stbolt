#### works till proposal conditions for composite operators are acquired at an appropriate time
sp {elaborate*mapping*new*indexed-operator*goal
   (state <s> ^topstate <s>
   	      ^indexed-operator <op>)
   (<op> ^_metadata.map-id.goal <any>)
-->
   (<op> ^mapping new)
}


#######################

sp {elaborate*no-argument-match*state-no-change
   (state <s> ^superstate <ss>
   	      ^impasse no-change
	      ^attribute state)
   (<ss> ^indexed-operator <iop>)
   (<iop> -^mapping new
   	  -^matched <arg>
	   ^{<arg> <> applied <> information <> _relation <> _metadata <> name} <val>)
-->
   (<s> ^name incorrect-operator-argument)
}

sp {propose*no-argument*match
   (state <s> ^name incorrect-operator-argument
   	      ^superstate <ss>)
   (<ss> ^resolve-operator <op>
   	 ^indexed-operator <map-op>)
   (<map-op> -^mapping new
	     ^{<arg> <> applied <> information <> _relation <> _metadata <> name} <val>
	     -^matched <arg>)
-->
   (<op> ^name resolve-map-impasse
	 ^indexed-operator <map-op>
	 ^category indexing
	 ^argument <arg>
	 ^map-impasse-type state-no-change)
}


### resolve of map-impasse-type state-no-change, assume that the object provided by the instructor in the command was incorrect and ask questions to fix that

sp {state-no-change*map-impasse*no-operator-match
   (state <s> ^name resolve-map-impasse
   	      ^indexed-operator <iop>
	      ^map-impasse-type state-no-change
	      ^argument <arg>)
-->
   (<s> ^name complete-index-object)
}

sp {state-no-change*map-impasse*no-operator-match*cleanup-status
   (state <s> ^name complete-index-object
   	      ^name resolve-map-impasse
   	      ^indexed-operator <iop>
	      ^map-impasse-type state-no-change
	      ^argument <arg>
	      ^topstate.interaction.stack.segment.indexing-status <is>)
   (<is> ^<cue-arg> <val>)
   (<iop> ^_metadata.arg-data <arg-data>)
   (<arg-data> ^argument <arg>
   	       ^description <cue-arg>)
-->
   (<is> ^<cue-arg> <val> -)
}