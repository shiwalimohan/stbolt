### propose resolve-multiple-matches-dialog for op ties even after procedural constraints
#### process multiple matches to one argument, rely on interaction
sp {multiple-operator*match*map*create*operator
   (state <s> ^impasse tie
	      ^item.<arg> <val1>
	      ^item.<arg> {<> <val2> <val1>}
	      -^learning-operator <any>
	      -^status.type which-question
	      ^superstate <ss>)
   (<ss> ^indexed-operator <iop>
	 ^resolve-operator <op>)
   (<iop> ^_metadata.arg-data.argument <arg>)
-->
   (<op> ^name resolve-map-impasse
	 ^indexed-operator <iop>
	 ^category indexing
	 ^argument <arg>
	 ^map-impasse-type multiple-operator-match)
}


#### 
sp {multiple-operator-match*revise*indexed-operator*object*preference
   (state <s> ^name resolve-map-impasse
   	      ^indexed-operator <iop>
	      ^map-impasse-type multiple-operator-match
	      ^argument <arg>)
   (<iop> ^<arg> <obj1>)
-->
   (<s> ^operator <op> +)
   (<op> ^name select-object
   	 ^object <obj1>
	 ^category indexing)
}

sp {break-op-tie*based*on*preference*DEF
   (state <s> ^name resolve-map-impasse
   	      ^operator <op1> +
	      ^operator <op2> +
	      ^indexed-operator <iop>
	      ^object-description <desc>)
   (<op1> ^object <obj1>) 
   (<op2> ^object <obj2>)
   (<iop> ^_metadata.partial-order <po>)
   (<desc> ^specifier DEF)
   (<po> ^operator-argument <arg>
   	 ^<pref1> <obj1>
	 ^{<pref2> > <pref1>} <obj2>)
-->
   (<s> ^operator <op1> > <op2>)
}

sp {break-op-tie*equal*INDEF
   (state <s> ^name resolve-map-impasse
   	      ^operator <op1> +
	      ^operator <op2> +
	      ^indexed-operator <iop>
	      ^object-description <desc>)
   (<op1> ^object <obj1>) 
   (<op2> ^object <obj2>)
   (<desc> ^specifier INDEF)
-->
   (<s> ^operator <op1> = <op2>)
}

sp {apply*select-object*multiple-argument-matches
   (state <s> ^name resolve-map-impasse
   	      ^operator <op>
	      ^argument <arg>
	      ^indexed-operator <iop>)
   (<op> ^name select-object
   	 ^object <obj>)
   (<iop> ^<arg> <obj>
   	  ^<arg> {<obj1> <> <obj>})
-->
   (<iop> ^<arg> <obj1> -)
}


sp {break-op-tie*based*on*preference*DEF*no-prefrence
   (state <s> ^name resolve-map-impasse
	      ^indexed-operator <iop>
	      ^object-description <desc>)
   (<iop> ^_metadata.partial-order <po>)
   (<desc> ^specifier DEF)
   (<po> ^operator-argument <arg>
   	 ^<pref1> <obj1>
	 -^{<pref2> > <pref1>} {<obj2> <> <obj1>})
-->
   (<s> ^name complete-index-object)
}

#### if no duplicate arguments remain, resolution is complete; remove operator
sp {resolve*multiple-operator*match*complete
   (state <s> ^name resolve-map-impasse
   	      ^indexed-operator <iop>
	      ^map-impasse-type multiple-operator-match
	      ^argument <arg>
	      ^superstate <ss>)
   (<iop> ^<arg> <obj1>
	  -^<arg> {<obj2> <> <obj1>})
   (<ss> ^operator <sop>
   	 ^resolve-operator <op>)
   (<sop> ^name resolve-map-impasse)
-->
   (<ss> ^resolve-operator <op> -
   	 ^resolve-operator <nop>)
}


   	  