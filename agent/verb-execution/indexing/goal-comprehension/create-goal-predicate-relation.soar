#### create state
sp {elaborate*create-goal-predicate
   (state <s> ^name create-goal-predicate-relation
   	      ^superstate <ss>
	      ^topstate.interaction.stack.segment.indexing-status <stat>)
   (<ss> ^operator <sop>)
   (<sop> ^name create-goal-predicate-relation
   	  ^goal-id <gid>
	  ^information <pred>
	  ^map-id <map>
	  ^indexed-operator <iop>
	  ^predicate-type relation)
-->
   (<s> ^preposition-id <id>	
   	^information <pred>
	^map-id <map>
	^bit flip
	^indexed-operator <iop>
	^relation <rel>
	^goal-id <gid>
	^status <stat>)
}	


### elaborate preposition-id
sp {elaborate*preposition-id
   (state <s> ^preposition-id <id>
   	      ^information <info>)
   (<info> ^word <prep-word>)
-->
   (<id> ^word <prep-word>)
}

### index preposition
sp {propose*index-preposition*goal-predicate
   (state <s> ^name create-goal-predicate-relation
   	      ^preposition-id.word <prep>
	      -^_relation.preposition <prep>
	      ^status <stat>)
 -->
   (<s> ^operator <op> +)
   (<op> ^name index-preposition
   	 ^preposition <prep>
	 ^category indexing	
	 ^status <stat>)
}

sp {index-preposition*goal-predicate*write-to-superstate
   (state <s> ^name create-goal-predicate-relation
   	      ^preposition-id.word <prep>
	      ^_relation <rel>
	      ^superstate <ss>)
   (<rel> ^preposition <prep>)
-->
   (<ss> ^_relation <rel>)
}

#### index arguments
sp {propose*index*argument*relation
   (state <s> ^name create-goal-predicate-relation
   	      ^information <info>
	      ^bit flip
	      ^preposition-id <id>
	      ^_relation.preposition)
   (<info> ^{<argattr> <> word} <obj>)
   (<obj> ^object <arg>)
   (<id> -^<argattr> <anything>
   	 ^word <prep>)
-->
   (<s> ^operator <op> + =)
   (<op> ^name index-argument
   	 ^category indexing	
	 ^connector <argattr>
	 ^cue <id>
	 ^argument <arg>
	 ^context-id (concat <info> <argattr>)
	 ^return-all false
	 ^allow-ties true
	 ^status <stat>
	 ^category indexing)
}


#### using dialog context, resolve the referent
#### improper dialog context

sp {create*relation*visual-objects
   (state <s> ^name create-goal-predicate-relation
   	      ^preposition-id <id>
	      ^relation <rel>
	      ^indexed-operator <iop>
	      ^map-id.procedural <map>)
   (<id> ^{<arg> <> word} <obj>)
   (<iop> ^<op-arg> <obj>)
   (<map> ^<op-arg> <sobj>)
-->
   (<rel> ^<arg> <sobj>)
}

sp {create*relation*semantic-object
   (state <s> ^name create-goal-predicate-relation
   	      ^preposition-id <id>
	      ^relation <rel>
	      ^indexed-operator <iop>
	      ^map-id.procedural <map>
	      ^smem.command <scomm>)
   (<id> ^{<arg> <> word} <obj>)
   (<iop> -^<op-arg> <obj>)
-->
   (<rel> ^<arg> <obj>)
   (<scomm> ^store <obj>)
}


sp {create*relation*semantic-object*substructure
   (state <s> ^name create-goal-predicate-relation
	      ^relation <rel>
	      ^smem.command <scomm>)   
   (<rel> ^<arg> <obj>)
   (<scomm> ^store <obj>)
   (<obj> ^<oarg> <oval>)
   (<oval> ^<oval-arg> <ovval>)
-->
   (<scomm> ^store <oval>
   	    ^store <ovval>)
}

sp {remove*primitive-actions*assign-goal
   (state <s> ^name << create-goal-predicate-relation create-goal-predicate-state >>
   	      ^operator <op> +)
   (<op> ^category << primitive-action composite-action >>)
-->
  (<s> ^operator <op> -)
}



### write to the superstate
sp {write*superstate*relation
   (state <s> ^superstate <ss>
   	      ^impasse no-change
	      ^attribute state
	      ^smem.command <scomm>)
   (<ss> ^name create-goal-predicate-relation
   	 ^relation <rel>
	 ^goal-id <gid>
	 ^superstate <sss>
	 ^preposition-id.word <pword>
	 ^_relation <trel>
	 ^information <info>)
   (<trel> ^preposition <pword>
   	  ^_ltid <cid>)
   (<rel> ^<sub> <structure>)
   (<sss> ^name index-goal
   	  ^learning-event <le>)
-->
   (<gid> ^predicate <rel>)
   (<rel> ^type <cid>
   	  ^g_prep_name <pword>
	  ^category relation)
   (<scomm> ^store <gid>
   	    ^store <rel>
	    ^store <cid>)
   (<sss> ^bit flip)
   (<le> ^completed <info>)
}

