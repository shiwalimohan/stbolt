### if the interaction-stack has a goal statement map the goal to objects in semantic memory and object present in the environment

sp {elaborate*goal-acquistion*indexed-operator
   (state <s> ^interaction.stack.segment <top>)
   (<top> ^originator instructor
   	  ^purpose <p>)
   (<p> ^type goal-acquisition
   	^satisfaction <ps>)
   (<top> ^next.purpose.indexed-operator <iop>)
-->
   (<p> ^indexed-operator <iop>)
}


sp {propose*map*goal
   (state <s> ^interaction.stack.segment <top>)
   (<top> ^originator instructor
   	  ^purpose <p>)
   (<p> ^type goal-acquisition
   	^satisfaction <ps>
	^indexed-operator <iop>)
#   (<iop> -^goal <any>)
   (<ps> ^learning-event <le>)
   (<le> ^type verb-semantic-learning
         ^information <info>)
-->
   (<s> ^operator <op> +)
   (<op> ^name index-goal
   	 ^information <info>
	 ^indexed-operator <iop>
	 ^category indexing)
}

### plug in to the interaction stack
sp {write*goal-comprehension*status*topstate
   (state <s> ^operator <op>
   	      ^interaction.stack.segment.purpose.indexed-operator.goal <goal>
	      ^topstate.status <status>)
   (<op> ^name index-goal)
-->
   (<status> ^performed.learning-event verb-semantic-learning)
}
