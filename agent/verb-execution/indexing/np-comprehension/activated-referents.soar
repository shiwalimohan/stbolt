sp {propose*write*matched*objects*activated*superstate
   (state <s> ^name index-argument
   	      ^match <obj>
	      -^topstate.interaction.referents.objects.object <obj>
	      ^highest-activation <obj>)
-->
   (<s> ^operator <op> +)
   (<op> ^name activated-referents
   	 ^category indexing)
}

sp {apply*write*matched*object*activated-set*superstate
   (state <s> ^name index-argument
   	      ^operator.name activated-referents
   	      ^match <obj>
	      ^superstate <ss>
	      ^cue <cue>
	      ^connector <con>
	      ^highest-activation <obj>
	      ^status <stat>
	      ^argument <arg>)
-->
   (<cue> ^<con> <obj>)
   (<stat> ^<con> <obj>)
   (<ss> ^matched <arg>
   	 ^bit flip)
}

sp {preference*activated-referents*activated-referents
   (state <s> ^name index-argument
   	      ^operator <op1> +
	      ^operator <op2> +)
   (<op1> ^name focus-referents)
   (<op2> ^name activated-referents)
-->
   (<s> ^operator <op1> > <op2>)
}


sp {find-object*create-cue*look-up*object*smem
   (state <s> ^name index-object)
-->
   (<s> ^description <cue>)
}

sp {find-object*populate*cue*description
   (state <s> ^name index-object
   	      ^description <cue>
	      ^index-object-context.object.property <n>)
   (<n> ^category <arg>
   	^label <val>)
-->
   (<cue> ^<arg> <val>)
}

sp {cue*semantic-memory*object*activation
   (state <s> ^name index-object
   	      ^description <desc>
	      ^smem.command <scomm>
	      ^operator.name identify-object)
-->
   (<scomm> ^query <desc>)
}

sp {smem*object*object*found
   (state <s> ^name index-object
   	      ^smem.result.retrieved <act-obj>
	      ^superstate <ss>)
-->
   (<ss> ^highest-activation <act-obj>)
}

# sp {smem*object*not-found
#    (state <s> ^name index-object
#    	      ^smem.result.failure
# 	      ^superstate <ss>)
# -->
#    (<ss> ^activated none)
# }
   
	      
