# Rules that handle when an object-message is sent by the user

# Proposal
sp {propose*push-object-message
   (state <s> ^topstate <s>
              ^instructor-message <msg>)
   (<msg> ^type object-message
         -^purpose)
-->
   (<s> ^operator <o> +)
   (<o> ^name push-object-message
        ^category communication
        ^message <msg>)
}

# Elaborate useful information from the message to the operator
sp {elaborate*push-object-message*object
   (state <s> ^operator <o> +)
   (<o> ^name push-object-message
        ^message <msg>)
   (<msg> ^information.object <obj>)
-->
   (<o> ^object <obj>)
}

sp {elaborate*push-object-message*relation
   (state <s> ^operator <o> +)
   (<o> ^name push-object-message
        ^message <msg>)
   (<msg> ^information.relation <rel>)
-->
   (<o> ^relation <rel>)
}

sp {elaborate*push-object-message*specifier
   (state <s> ^operator <o> +)
   (<o> ^name push-object-message
        ^message <msg>)
   (<msg> ^information.object.specifier <spec>)
-->
   (<o> ^specifier <spec>)
}

# If the specifier is 'this' and there is no relation, 
#   treat it as a this-object-message
sp {apply*push-object-message*this-object-message
   (state <s> ^operator <o>)
   (<o> ^name push-object-message
        ^message <msg>
        ^specifier << this that >>
        ^object <obj>
       -^relation)
   (<msg> -^context.cause which-question)
-->
   (<msg> ^purpose <p>)
   (<p> ^type this-object-message
        ^parameters <params>
        ^satisfaction <sat>)
   (<params> ^object <obj>)
   # AM: Changed satisfaction structure
   (<sat> ^learning-event.type object)
}

# If the message is in response to a category-of-word question,
#   learn the word2cat mapping
sp {apply*push-object-message*learn-word2cat
   (state <s> ^operator <o>)
   (<o> ^name push-object-message
        ^message <msg>
        ^specifier INDEF#<< none INDEF >>
        ^object.word {<category> <> <word> <> property <> one}
       -^relation)
   (<msg> ^context <context>)
   (<context> ^cause category-of-word-query
        	  ^word <word>)
-->
   (<msg> ^purpose <p>)
   (<p> ^type learn-word2cat
        ^parameters <params>
        ^satisfaction <sat>)
   (<params> ^category <category>
             ^word <word>)
        # AM: Changed satisfaction structure
   (<sat> ^learning-event <e>)
   (<e> ^type word2cat
        ^word <word>)
}



#sp {apply*push-object-message*which-question-response*remove*message
#   (state <s> ^operator <o>
#              ^instructor-message <msg>)
#   (<o> ^name push-object-message
#        ^specifier << none DEF >>
#        ^message <msg>
#       -^relation)
#   (<msg> ^context.cause which-question)
#-->
#   (<s> ^instructor-message <msg> -)
#}

sp {apply*push-object-message*which-question-response*copy*specifier
   (state <s> ^operator <o>)
   (<o> ^name push-object-message
        ^message.context <context>
        ^specifier <spec>)
   (<context> ^cause which-question
        	  ^object <obj>)
-->
   (<obj> ^specifier <spec>)
}

# Result when answered with a further description ('the red object')
sp {apply*push-object-message*which-question-response*copy-word
   (state <s> ^operator <o>)
   (<o> ^name push-object-message
        ^message.context <context>
        ^object.word {<word> <> UNKNOWN})
   (<context> ^cause which-question
        		^object <obj>)
   (<obj> ^desired true
          -^property.word <word>)
-->
   (<obj> ^property.word <word>)
}

# Result when responding to a which-question with a relation
sp {apply*push-object-message*which-question-response*relation
   (state <s> ^operator <o>)
   (<o> ^name push-object-message
        ^message.context <context>
        ^relation <rel>)
   (<context> ^cause which-question
              ^index-object-context <io-context>
              ^object <obj1>)
   (<rel> ^p2.object <obj2> ^word <prep>)
-->
   (<io-context> ^object <obj2>
                 ^relation <rel-copy>)
   (<rel-copy> ^object1 <obj1>
               ^object2 <obj2>
               ^property.word <prep>)
}


sp {apply*push-object-message*mark*processed
   (state <s> ^operator <o>)
   (<o> ^name push-object-message
        ^message <msg>)
-->
   (<msg> ^processed true)
}


sp {apply*push-object-message*remove*message
   (state <s> ^operator <o>)
   (<o> ^name push-object-message
        ^message <msg>)
   (<msg> ^processed true
         -^purpose)
-->
   (<s> ^instructor-message <msg> -)
}
