# Adds a segment to the interaction stack to deal with the category question

sp {topstate*propose*category-question
   (state <s> ^topstate <s>
              ^interaction.stack.segment.purpose <p>)
   (<p> ^type category-question
        ^parameters.category <cat-name>)
-->
   (<s> ^operator <o> +)
   (<o> ^name category-question
        ^category object-processing)
}

# index-object - look up using this

sp {category-question*propose*index-object*this
   (state <s> ^name category-question
             -^this-object)
-->
   (<s> ^operator <o> +)
   (<o> ^name index-object
        ^category object-processing
        ^object.specifier this
        ^return-all false
        ^use-interaction true
        ^allow-ties true)
}

sp {category-question*apply*index-object*success
   (state <s> ^name category-question
              ^operator <o>)
   (<o> ^name index-object
        ^finished true
        ^match {<obj> <> failure})
-->
   (<s> ^this-object <obj>)
}

sp {category-question*apply*index-object*success*store*referent
   (state <s> ^name category-question
              ^operator <o>
              ^topstate.interaction.stack.segment.info <info>)
   (<o> ^name index-object
        ^finished true
        ^match {<obj> <> failure})
-->
   (<info> ^referent-object <obj>)
}

sp {category-question*apply*index-object*failure
   (state <s> ^name category-question
              ^operator <o>
              ^io.output-link <out>)
   (<o> ^name index-object
        ^finished true
        ^match failure)
-->
   (<out> ^send-message <msg>)
   (<msg> ^type no-object
          ^fields <f>)
}

# Do category question
sp {category-question*propose*lookup-smem
	(state <s> ^name category-question
            ^topstate.interaction.stack.segment.purpose <p>)
	(<p> ^type category-question
      	 ^parameters.category <cat-name>)
-->
    (<s> ^operator <o> +)
    (<o> ^name lookup-smem
         ^lookup-type word
         ^category smem
         ^category <cat-name>)
}

sp {category-question*elaborate*lookup-smem*object*pointed
   	(state <s> ^name category-question
               ^operator <o> +
               ^topstate.interaction.stack.segment.purpose.type category-question
               ^io.input-link.pointed-object <obj-id>
               ^topstate.object <obj>)
    (<o> ^name lookup-smem)
    (<obj> ^id <obj-id>)
-->
    (<o> ^object <obj>)
}

sp {category-question*elaborate*lookup-smem*object*only-one
   	(state <s> ^name category-question
               ^operator <o> +
               ^topstate.interaction.stack.segment.purpose.type category-question
               ^topstate.object <obj>
              -^topstate.object <> <obj>)
    (<o> ^name lookup-smem)
-->
    (<o> ^object <obj>)
}

sp {category-question*elaborate*lookup-smem*query
   (state <s> ^name category-question
              ^operator <o> +
              ^topstate.interaction.stack.segment.purpose.type category-question)
   (<o> ^name lookup-smem
        ^category <cat-name>
        ^object.property <prop>)
   (<prop> ^name <cat-name>
           ^label <label>)
-->
   (<o> ^query <q>
        ^desired.word true)
   (<q> ^type label-map ^category <cat-name> ^label <label> ^word <word>)
}

sp {category-question*elaborate*lookup-smem*no-query
   (state <s>  ^name category-question
               ^operator <o> +
              ^topstate.interaction.stack.segment.purpose.type category-question)
   (<o> ^name lookup-smem
       -^query)
-->
   (<o> ^result failure)
}

sp {category-question*apply*failure*dont-know
   (state <s>  ^name category-question
               ^operator <o>
              ^io.output-link <out>
              ^topstate.interaction.stack.segment.purpose.type category-question)
   (<o> ^name lookup-smem
        ^object
        ^result failure)
-->
   (<out> ^send-message <msg>)
   (<msg> ^type dont-know
          ^fields <f>)
}

sp {category-question*apply*failure*no-object
   (state <s>  ^name category-question
               ^operator <o>
              ^io.output-link <out>
              ^topstate.interaction.stack.segment.purpose.type category-question)
   (<o> ^name lookup-smem
        -^object
        ^result failure)
-->
   (<out> ^send-message <msg>)
   (<msg> ^type no-object
          ^fields <f>)
}

sp {category-question*apply*lookup-smem*send-word
   (state <s>  ^name category-question
               ^operator <o>
              ^io.output-link <out>
              ^topstate.interaction.stack.segment.purpose.type category-question)
   (<o> ^name lookup-smem
        ^result {<word> <> failure})
-->
   (<out> ^send-message <msg>)
   (<msg> ^type single-word-response
          ^fields.word <word>)
}

sp {category-question*apply*lookup-smem*mark-performed
   (state <s>  ^name category-question
               ^operator <o>
              ^topstate.interaction.stack.segment.purpose.type category-question
              ^topstate.status <status>)
   (<o> ^name lookup-smem
        ^result)
-->
   #(<status> ^performed.dialog-event category-response)
   # AM: Changed performed structure
   (<status> ^performed.dialog-event <e>)
   (<e> ^type category-response)
}