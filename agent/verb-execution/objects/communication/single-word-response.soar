sp {apply*pop-segment*create*instructor-purpose*single-word-response*learn-word2cat
   (state <s> ^topstate <s> 
              ^operator.name pop-segment
              ^interaction.stack.segment.purpose.parameters.query <q>
              ^instructor-message <msg>)
   (<msg> ^type single-word-response
          ^information.response <category>)
   (<q> ^type category-of-word
        ^word <word>)
-->
   (<msg> ^purpose <p>)
   (<p> ^type learn-word2cat
        ^parameters <params>
        ^satisfaction <sat>)
   (<params> ^category <category>
             ^word <word>)
   (<sat> ^learning-event word2cat)
}

# The teaching-request is finished with either the word 'finished' or 'cancel'
sp {apply*pop-segment*single-word-response*teaching-request*finished
   (state <s> ^topstate <s> 
              ^operator.name pop-segment
              ^interaction.stack.segment <seg>
              ^instructor-message <msg>
              ^queries <qs>)
   (<seg> ^purpose.parameters.query <q>
          ^next <next-seg>)
   (<msg> ^type single-word-response
          ^information.response << finished cancel >>)
   (<q> ^type teaching-request
        ^segment <next-seg>)
-->
   (<qs> ^query <q> -)
   (<s> ^instructor-message <msg> -)
}

sp {apply*pop-segment*single-word-response*teaching-request*cancel
   (state <s> ^topstate <s> 
              ^operator.name pop-segment
              ^interaction.stack.segment <seg>
              ^instructor-message <msg>)
   (<seg> ^purpose.parameters.query <q>
          ^next <next-seg>)
   (<msg> ^type single-word-response
          ^information.response cancel)
   (<q> ^type teaching-request
        ^segment <next-seg>
        ^object <obj>)
-->
   (<obj> ^no-teaching true)
   (<s> ^instructor-message <msg> -)
}