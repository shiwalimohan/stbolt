
sp {elaborate*report-predicate*from-wmes*1
   (state <s> ^problem-space lgsoar
              ^final-predicates.predicate <p>)
   (<p> ^outer <out>
        ^inner1 <in1>
        ^originating-sentence <os>
       -^inner2)
-->
   (write (crlf) (concat <out> |(| <in1> |) from sentence | <os>))
}

sp {elaborate*report-predicate*from-wmes*2
   (state <s> ^problem-space lgsoar
              ^final-predicates.predicate <p>)
   (<p> ^outer <out>
        ^inner1 <in1>
        ^inner2 <in2>
        ^originating-sentence <os>
       -^inner3)
-->
   (write (crlf) (concat <out> |(| <in1> |,| <in2> |) from sentence | <os>))
}

sp {elaborate*report-predicate*from-wmes*3
   (state <s> ^problem-space lgsoar
              ^final-predicates.predicate <p>)
   (<p> ^outer <out>
        ^inner1 <in1>
        ^inner2 <in2>
        ^inner3 <in3>
        ^originating-sentence <os>)
--> 
   (write (crlf) (concat <out> |(| <in1> |,| <in2> |,| <in3> |) from sentence | <os>))
}

sp {elaborate*report-predicate*from-wmes*4
   (state <s> ^problem-space lgsoar
              ^final-predicates.predicate <p>)
   (<p> ^outer1 <out1>
        ^outer2 <out2>
        ^inner1 <in1>
        ^inner2 <in2>
       -^inner3
        ^originating-sentence <os>)
-->
   (write (crlf) (concat <out1> |-| <out2> |(| <in1> |,| <in2> |) from sentence | <os>))
}

sp {elaborate*proposed*add-arg*debug-info*single
  (state <s> ^operator <o> +
             ^current-sentence.words <wd>)
  (<o> ^name add-arg
       ^main <main>
       ^aug <aug>
       ^arg.wvalue <arg-wvalue>
       ^link <link>
       ^kind << single single-side >>)
  (<main> ^wvalue <wval>)
  (<link> ^ltype <ltype>
          ^lwleft <left> ^lwright <right>)
  (<wd> ^word <wleft> ^word <wright>)
  (<wleft> ^wcount <left> ^wvalue <leftword>)
  (<wright> ^wcount <right> ^wvalue <rightword>)
-->
  (<o> ^debug-info (concat |on referent for "| <wval> |", adding "| <arg-wvalue> |" as | <aug> |, due to | <ltype> | link from "| <leftword> |" to "| <rightword> |"|)
       ^base-debug-added true)
}

sp {elaborate*proposed*add-arg*debug-info*constant-deep
  (state <s> ^operator <o> +
             ^current-sentence.words <wd>)
  (<o> ^name add-arg
       ^main <main>
       ^aug <aug>
       ^arg.feature <feat>
       ^arg.word.wvalue <word>
       ^link <link>
       ^kind constant)
  (<main> ^wvalue <wval>)
  (<link> ^ltype <ltype>
          ^lwleft <left> ^lwright <right>)
  (<wd> ^word <wleft> ^word <wright>)
  (<wleft> ^wcount <left> ^wvalue <leftword>)
  (<wright> ^wcount <right> ^wvalue <rightword>)
-->
  (<o> ^debug-info (concat |on referent for "| <wval> |", adding | <feat> | "| <word> |" as | <aug> |, due to | <ltype> | link from "| <leftword> |" to "| <rightword> |"|)
       ^base-debug-added true)
}

sp {elaborate*proposed*add-arg*debug-info*constant-surface
  (state <s> ^operator <o> +
             ^current-sentence.words <wd>)
  (<o> ^name add-arg
       ^main <main>
       ^aug <aug>
       ^arg <arg>
      -^arg.feature
       ^link <link>
       ^kind constant)
  (<main> ^wvalue <wval>)
  (<link> ^ltype <ltype>
          ^lwleft <left> ^lwright <right>)
  (<wd> ^word <wleft> ^word <wright>)
  (<wleft> ^wcount <left> ^wvalue <leftword>)
  (<wright> ^wcount <right> ^wvalue <rightword>)
-->
  (<o> ^debug-info (concat |on referent for "| <wval> |", adding "| <arg> |" as | <aug> |, due to | <ltype> | link from "| <leftword> |" to "| <rightword> |"|)
       ^base-debug-added true)
}
sp {elaborate*proposed*add-arg*debug-info*side
  (state <s> ^operator <o> +)
  (<o> ^name add-arg
       ^main <main>
       ^aug <aug>
       ^arg.wvalue <wval>
       -^arg.ref
       ^link <link>
       ^base-debug-added
       ^kind << single single-side >>)
  (<link> ^ltype <ltype>)
-->
  (<o> ^debug-info (concat |side effect: new ref for "|<wval>|" added|))
}

     
sp {apply*any*print-debug-info
   (state <s> ^operator <o>)
   (<o> ^name <any>
        ^debug-info <info>)
-->
   (write (crlf) (concat |        | <info>))
}

# sp {elaborate*processing-complete*refs
#   (state <s> ^operator.name processing-complete
#              ^refsets.refs <rs>)
# -->
#   (write (crlf) |refs: | (crlf) (cmd print --tree --depth 2 <rs>))
#   }
